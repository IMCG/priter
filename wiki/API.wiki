#summary PrIter API.

= Configure Job ==


 * `void JobConf.setActivatorClass(Class<? extends Activator>);`

    set the activator class


 * `void JobConf.setUpdatorClass(Class<? extends Updator>);`

    set the updator class


 * `void JobConf.setPriorityClass(Class<? extends Writable>);`

    set the priority class

= User-Defined Functions =

== Along with Activator class ==

`public interface Activator<K, P extends WritableComparable, V> extends JobConfigurable {`

 * `void initStarter(InputPKVBuffer<V> starter) throws IOException;`

    to be invoked before iteration starts, init the starter for iterative compuattion

 * `void activate(IntWritable nodeid, V value, OutputCollector<IntWritable, V> output, Reporter reporter);`

    to be invoked when activating node with value, the neighbors of node will be affected, users specify the values sent to neighbors to realize their algorithm logic

 * `void iterate();`

    to be invoked after emitting all the results to neighbors after each iteation, implement some tracke codes

`}`
== Along with Updator ==

`public interface Updater<K, P extends Valueable, V extends Valueable> extends JobConfigurable {`

 * `void initStateTable(OutputPKVBuffer<P, V> stateTable);`

    to be invoked before iteration starts, init statetable

 * `V resetiState();`

    to be invoked when node record reset, reset the node's iState

 * `P decidePriority(IntWritable nodeid, V iState);`

    to be invoked when updating statetable, decide node's execution priority (based on iState).

 * `P decideTopK(IntWritable nodeid, V cState);`

    to be invoked when extracting top k result, decide node's priority for online top k query (based on cState)

 * `void updateState(K nodeid, V iState, OutputPKVBuffer<K, P, V> stateTable, Reporter reporter) throws IOException;`

    to be invoked when updating StateTable, users specify the update rule to realize their algorithm logic
	
 * `void iterate();`

    to be invoked after emitting all the results to neighbors after each iteation, implement some tracke codes

`}`