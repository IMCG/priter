#summary PrIter API.

= Configure Job ==

`void JobConf.setPriorityClass(Class<? extends Writable>);`

void JobConf.setActivatorClass(Class<? extends Activator>);

void JobConf.setUpdatorClass(Class<? extends Updator>);

= User-Defined Functions =


== Along with Activator ==

void initStarter(InputPKVBuffer<V> starter) throws IOException;

void activate();

void iterate();


== Along with Updator ==

void initStateTable(OutputPKVBuffer<P, V> stateTable);

V setDefaultiState();

V setDefaultcState(IntWritable nodeid);

P decidePriority(IntWritable nodeid, V iState, boolean iornot);

void updateState(K nodeid, Iterator<V> iState, OutputPKVBuffer<P, V> stateTable, Reporter reporter) throws IOException;	
	
void iterate();



|| *function* || *input* || *output* || *description* || *invoked* ||
|| Map.initStateTable() || StateTable || na || initialize the StateTable || in the init phase ||
|| Map.loadStaticData() || static data path || na || load the static data to memory || in the init phase ||
|| Map.iterate() || na || na || do some summarization || after each map-reduce iteration ||
|| Reduce.updateState() || output key-value pair || iState & cState || set each output key-value pair's state || after reduce operation ||
|| Reduce.setPriority() || output key-value pair || priority || set each output key-value pair's priority || before enqueue ||
|| Reduce.iterate() || na || na || do some summarization || after each map-reduce iteration ||